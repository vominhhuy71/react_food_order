{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\food-order\\\\src\\\\components\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD_ITEM') {\n    const updatedTotalAmount = state.totalAmount + action.payload.price * action.payload.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.payload.id);\n    const updatedItems = state.items.concat(action.payload);\n    console.log(updatedTotalAmount);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return state;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD_ITEM',\n      payload: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE_ITEM',\n      payload: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["E:/React/food-order/src/components/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","payload","price","amount","existingCartItemIndex","findIndex","item","id","updatedItems","concat","console","log","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemToCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAGA,MAAM,CAACC,IAAP,KAAgB,UAAnB,EAA8B;AAC1B,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,OAAP,CAAeC,KAAf,GAAuBJ,MAAM,CAACG,OAAP,CAAeE,MAArF;AAEA,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsBC,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACG,OAAP,CAAeM,EAAvD,CAA9B;AAEA,UAAMC,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYe,MAAZ,CAAmBX,MAAM,CAACG,OAA1B,CAArB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYX,kBAAZ;AACA,WAAO;AAACN,MAAAA,KAAK,EAAEc,YAAR;AAAsBb,MAAAA,WAAW,EAAEK;AAAnC,KAAP;AACH;;AACD,SAAOH,KAAP;AACH,CAXD;;AAaA,MAAMe,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCxB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMuB,oBAAoB,GAAGV,IAAI,IAAI;AACjCS,IAAAA,kBAAkB,CAAC;AAAChB,MAAAA,IAAI,EAAE,UAAP;AAAmBE,MAAAA,OAAO,EAACK;AAA3B,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMW,uBAAuB,GAAGV,EAAE,IAAI;AAClCQ,IAAAA,kBAAkB,CAAC;AAAChB,MAAAA,IAAI,EAAE,aAAP;AAAsBE,MAAAA,OAAO,EAACM;AAA9B,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMW,WAAW,GAAG;AAChBxB,IAAAA,KAAK,EAAEoB,SAAS,CAACpB,KADD;AAEhBC,IAAAA,WAAW,EAAEmB,SAAS,CAACnB,WAFP;AAGhBwB,IAAAA,OAAO,EAAEH,oBAHO;AAIhBI,IAAAA,UAAU,EAAEH;AAJI,GAApB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACFL,KAAK,CAACQ;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CArBD;;GAAMT,Y;;KAAAA,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    if(action.type === 'ADD_ITEM'){       \r\n        const updatedTotalAmount = state.totalAmount + action.payload.price * action.payload.amount;\r\n\r\n        const existingCartItemIndex = state.items.findIndex(item=>item.id === action.payload.id);\r\n        \r\n        const updatedItems = state.items.concat(action.payload);\r\n        console.log(updatedTotalAmount);\r\n        return {items: updatedItems, totalAmount: updatedTotalAmount};\r\n    }\r\n    return state;\r\n}; \r\n\r\nconst CartProvider = props => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n    const addItemToCartHandler = item => {\r\n        dispatchCartAction({type: 'ADD_ITEM', payload:item})\r\n    }\r\n\r\n    const removeItemToCartHandler = id => {\r\n        dispatchCartAction({type: 'REMOVE_ITEM', payload:id})\r\n    }\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemToCartHandler\r\n    }\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}